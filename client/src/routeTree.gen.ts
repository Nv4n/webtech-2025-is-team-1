/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as ProjectImport } from './routes/project'
import { Route as ProfileImport } from './routes/profile'
import { Route as IndexImport } from './routes/index'
import { Route as TicketsIndexImport } from './routes/tickets.index'
import { Route as TicketsTicketIdImport } from './routes/tickets.$ticketId'
import { Route as TicketsTicketIdEditImport } from './routes/tickets_.$ticketId.edit'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const ProjectRoute = ProjectImport.update({
  id: '/project',
  path: '/project',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TicketsIndexRoute = TicketsIndexImport.update({
  id: '/tickets/',
  path: '/tickets/',
  getParentRoute: () => rootRoute,
} as any)

const TicketsTicketIdRoute = TicketsTicketIdImport.update({
  id: '/tickets/$ticketId',
  path: '/tickets/$ticketId',
  getParentRoute: () => rootRoute,
} as any)

const TicketsTicketIdEditRoute = TicketsTicketIdEditImport.update({
  id: '/tickets_/$ticketId/edit',
  path: '/tickets/$ticketId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/project': {
      id: '/project'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof ProjectImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/tickets/$ticketId': {
      id: '/tickets/$ticketId'
      path: '/tickets/$ticketId'
      fullPath: '/tickets/$ticketId'
      preLoaderRoute: typeof TicketsTicketIdImport
      parentRoute: typeof rootRoute
    }
    '/tickets/': {
      id: '/tickets/'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsIndexImport
      parentRoute: typeof rootRoute
    }
    '/tickets_/$ticketId/edit': {
      id: '/tickets_/$ticketId/edit'
      path: '/tickets/$ticketId/edit'
      fullPath: '/tickets/$ticketId/edit'
      preLoaderRoute: typeof TicketsTicketIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/project': typeof ProjectRoute
  '/test': typeof TestRoute
  '/tickets/$ticketId': typeof TicketsTicketIdRoute
  '/tickets': typeof TicketsIndexRoute
  '/tickets/$ticketId/edit': typeof TicketsTicketIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/project': typeof ProjectRoute
  '/test': typeof TestRoute
  '/tickets/$ticketId': typeof TicketsTicketIdRoute
  '/tickets': typeof TicketsIndexRoute
  '/tickets/$ticketId/edit': typeof TicketsTicketIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/project': typeof ProjectRoute
  '/test': typeof TestRoute
  '/tickets/$ticketId': typeof TicketsTicketIdRoute
  '/tickets/': typeof TicketsIndexRoute
  '/tickets_/$ticketId/edit': typeof TicketsTicketIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/project'
    | '/test'
    | '/tickets/$ticketId'
    | '/tickets'
    | '/tickets/$ticketId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/project'
    | '/test'
    | '/tickets/$ticketId'
    | '/tickets'
    | '/tickets/$ticketId/edit'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/project'
    | '/test'
    | '/tickets/$ticketId'
    | '/tickets/'
    | '/tickets_/$ticketId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  ProjectRoute: typeof ProjectRoute
  TestRoute: typeof TestRoute
  TicketsTicketIdRoute: typeof TicketsTicketIdRoute
  TicketsIndexRoute: typeof TicketsIndexRoute
  TicketsTicketIdEditRoute: typeof TicketsTicketIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  ProjectRoute: ProjectRoute,
  TestRoute: TestRoute,
  TicketsTicketIdRoute: TicketsTicketIdRoute,
  TicketsIndexRoute: TicketsIndexRoute,
  TicketsTicketIdEditRoute: TicketsTicketIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/project",
        "/test",
        "/tickets/$ticketId",
        "/tickets/",
        "/tickets_/$ticketId/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/project": {
      "filePath": "project.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/tickets/$ticketId": {
      "filePath": "tickets.$ticketId.tsx"
    },
    "/tickets/": {
      "filePath": "tickets.index.tsx"
    },
    "/tickets_/$ticketId/edit": {
      "filePath": "tickets_.$ticketId.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
