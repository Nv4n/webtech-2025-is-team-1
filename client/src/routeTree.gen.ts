/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TicketsImport } from './routes/tickets'
import { Route as ProfileImport } from './routes/profile'
import { Route as IndexImport } from './routes/index'
import { Route as TicketsIndexImport } from './routes/tickets.index'
import { Route as TicketsTicketIdImport } from './routes/tickets.$ticketId'

// Create/Update Routes

const TicketsRoute = TicketsImport.update({
  id: '/tickets',
  path: '/tickets',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TicketsIndexRoute = TicketsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TicketsRoute,
} as any)

const TicketsTicketIdRoute = TicketsTicketIdImport.update({
  id: '/$ticketId',
  path: '/$ticketId',
  getParentRoute: () => TicketsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/tickets': {
      id: '/tickets'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsImport
      parentRoute: typeof rootRoute
    }
    '/tickets/$ticketId': {
      id: '/tickets/$ticketId'
      path: '/$ticketId'
      fullPath: '/tickets/$ticketId'
      preLoaderRoute: typeof TicketsTicketIdImport
      parentRoute: typeof TicketsImport
    }
    '/tickets/': {
      id: '/tickets/'
      path: '/'
      fullPath: '/tickets/'
      preLoaderRoute: typeof TicketsIndexImport
      parentRoute: typeof TicketsImport
    }
  }
}

// Create and export the route tree

interface TicketsRouteChildren {
  TicketsTicketIdRoute: typeof TicketsTicketIdRoute
  TicketsIndexRoute: typeof TicketsIndexRoute
}

const TicketsRouteChildren: TicketsRouteChildren = {
  TicketsTicketIdRoute: TicketsTicketIdRoute,
  TicketsIndexRoute: TicketsIndexRoute,
}

const TicketsRouteWithChildren =
  TicketsRoute._addFileChildren(TicketsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/tickets': typeof TicketsRouteWithChildren
  '/tickets/$ticketId': typeof TicketsTicketIdRoute
  '/tickets/': typeof TicketsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/tickets/$ticketId': typeof TicketsTicketIdRoute
  '/tickets': typeof TicketsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/tickets': typeof TicketsRouteWithChildren
  '/tickets/$ticketId': typeof TicketsTicketIdRoute
  '/tickets/': typeof TicketsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile' | '/tickets' | '/tickets/$ticketId' | '/tickets/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/tickets/$ticketId' | '/tickets'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/tickets'
    | '/tickets/$ticketId'
    | '/tickets/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  TicketsRoute: typeof TicketsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  TicketsRoute: TicketsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/tickets"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/tickets": {
      "filePath": "tickets.tsx",
      "children": [
        "/tickets/$ticketId",
        "/tickets/"
      ]
    },
    "/tickets/$ticketId": {
      "filePath": "tickets.$ticketId.tsx",
      "parent": "/tickets"
    },
    "/tickets/": {
      "filePath": "tickets.index.tsx",
      "parent": "/tickets"
    }
  }
}
ROUTE_MANIFEST_END */
